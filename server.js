import express from "express";
import nodemailer from "nodemailer";
import cors from "cors";
import dns from "dns"; // ‚Üê —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∏–º–ø–æ—Ä—Ç

// –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –Ω–∞ —Å–ª—É—á–∞–π —Ä–∞–Ω–Ω–µ–≥–æ –ø–∞–¥–µ–Ω–∏—è
console.log("üöÄ Booting BuyWay backend...");
process.on("uncaughtException", (e) => console.error("Uncaught:", e));
process.on("unhandledRejection", (e) => console.error("Unhandled:", e));

const app = express();

// --- CORS: —Ä–∞–∑—Ä–µ—à–∞–µ–º —Ç–≤–æ–π –¥–æ–º–µ–Ω –∏ –ª–æ–∫–∞–ª–∫—É ---
const allowed = [
  "https://buyway.su",
  "https://www.buyway.su",
  "http://localhost:5173",
  "http://localhost:3000",
];
app.use(
  cors({
    origin: (origin, cb) =>
      !origin || allowed.includes(origin)
        ? cb(null, true)
        : cb(new Error("Not allowed by CORS")),
  })
);
app.use(express.json());

// --- Healthchecks ---
app.get("/", (_, res) => res.send("OK"));
app.get("/healthz", (_, res) => res.status(200).send("ok")); // –¥–ª—è Render Settings

// --- –ü–æ—á—Ç–æ–≤—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç (—Å IPv4 –∏ fallback) ---
dns.setDefaultResultOrder?.("ipv4first"); // —Ñ–æ—Ä—Å–∏–º IPv4 (–≤–∞–∂–Ω–æ –Ω–∞ Render)

function makeGmailTransport({ port, secure }) {
  return nodemailer.createTransport({
    host: "smtp.gmail.com",
    port, // 465 –∏–ª–∏ 587
    secure, // 465 ‚Üí true, 587 ‚Üí false
    auth: {
      user: process.env.GMAIL_USER,
      pass: process.env.GMAIL_PASS,
    },
    connectionTimeout: 20000,
    greetingTimeout: 20000,
    socketTimeout: 20000,
    tls: { servername: "smtp.gmail.com" },
  });
}

// –æ—Å–Ω–æ–≤–Ω–æ–π SMTP
let transporter = makeGmailTransport({ port: 465, secure: true });

// fallback –Ω–∞ –ø–æ—Ä—Ç 587
async function sendMailWithFallback(options) {
  try {
    await transporter.sendMail(options);
  } catch (e) {
    console.error("MAIL ERROR primary (465):", e?.code || e?.message);
    const fallback = makeGmailTransport({ port: 587, secure: false });
    await fallback.verify().catch((err) =>
      console.error("VERIFY 587:", err?.code || err?.message)
    );
    await fallback.sendMail(options);
  }
}

// --- API ---
app.post("/api/submit", async (req, res) => {
  const { name, contact, link, comment } = req.body || {};
  if (!name || !contact)
    return res
      .status(400)
      .json({ ok: false, error: "–ò–º—è –∏ –∫–æ–Ω—Ç–∞–∫—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã" });

  const html = `
    <h2>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ BuyWay</h2>
    <p><b>–ò–º—è:</b> ${name}</p>
    <p><b>–ö–æ–Ω—Ç–∞–∫—Ç:</b> ${contact}</p>
    <p><b>–°—Å—ã–ª–∫–∞:</b> ${link || "‚Äî"}</p>
    <p><b>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</b> ${comment || "‚Äî"}</p>
    <p><i>${new Date().toLocaleString()}</i></p>
  `;

  try {
    await sendMailWithFallback({
      from: `"BuyWay Service" <${process.env.GMAIL_USER}>`,
      to: process.env.GMAIL_USER,
      subject: "–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ BuyWay",
      html,
    });
    res.json({ ok: true });
  } catch (e) {
    console.error("MAIL ERROR:", e);
    res.status(500).json({ ok: false, error: "Mail send failed" });
  }
});

// --- –°—Ç–∞—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞ ---
const PORT = process.env.PORT || 10000;
app.listen(PORT, "0.0.0.0", () =>
  console.log(`‚úÖ API listening on :${PORT}`)
);
